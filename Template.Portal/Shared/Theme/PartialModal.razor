  <!-- Button to Open the Modal -->
<button type="button" class="@ButtonCSS" data-toggle="modal" data-target="#@Id">
    @Button
</button>

<!-- The Modal -->
<div class="modal fade" id="@Id">
    <div class="modal-dialog @Size">
        <div class="modal-content">

            <!-- Modal Header -->
            <div class="modal-header">
                <h4 class="modal-title">@Heading</h4>
                <button type="button" class="close" data-dismiss="modal" @onclick="OnCancel">&times;</button>
            </div>

            <!-- Modal body -->
            <div class="modal-body">
                <Message></Message>

                @Content
            </div>

            <!-- Modal footer -->
            @if (ShowFooter)
            {
                <div class="modal-footer">
                    @if (ShowOnConfirm)
                    {
                        <button type="button" class="btn btn-success" data-dismiss="modal" @onclick="OnConfirm" id="Confirm">Confirm</button>
                    }
                    @if (ShowOnCancel)
                    {
                        <button type="button" class="btn btn-danger" data-dismiss="modal" @onclick="OnCancel" id="Cancel">Cancel</button>

                    }
                </div>
            }           

        </div>
    </div>
</div>


@code {
    [Parameter] public string Id { get; set; } = Guid.NewGuid().ToString().Replace("-","");

    /// <summary>
    /// modal-sm -lg -xl none
    /// </summary>
    [Parameter] public string Size { get; set; } = string.Empty;
    [Parameter] public string Heading { get; set; } = "Confirm";


    [Parameter] public string Button { get; set; } = "btn btn-primary btn-sm";
    [Parameter] public string? ButtonCSS { get; set; }

    [Parameter] public EventCallback OnCancel { get; set; }
    [Parameter] public EventCallback OnConfirm { get; set; }

    [Parameter] public bool ShowFooter { get; set; } = true;
    [Parameter] public bool ShowOnCancel { get; set; } = true;
    [Parameter] public bool ShowOnConfirm { get; set; } = true;

    [Parameter] public RenderFragment? Content { get; set; }
}
